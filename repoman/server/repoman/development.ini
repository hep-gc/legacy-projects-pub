#
# repoman - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

# on initial setup of the database, this file will be parsed and users in it
# will be inserted as admins into the db.
admin_file = $HOME/repoman_admins
# uuid_namespace is just a random uuid right now.  could be created from a
# hash of the gridcanada root cert, or womthing similarOA

default_user_group = users

uuid_namespace = 6ba7b814-9dad-11d1-80b4-00c04fd430c8
temp_storage = /tmp/images
image_storage = /tmp/images

# 'application/json' is the correct thing to return.  but this makes it harder
# to view json in a browser window.  You can use other things if you want.
json_content_type = application/json

http_url_prefix = yourserver

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 8080

[app:main]
use = egg:repoman
full_stack = true
static_files = true

cache_dir = %(here)s/data
beaker.session.key = repoman
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# SQLAlchemy database URL
sqlalchemy.url = sqlite:///%(here)s/development.db

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# image Storage
base_dir = /opt/mvliet/repoman/images

# Logging configuration
[loggers]
keys = root, routes, repoman, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_repoman]
level = DEBUG
handlers =
qualname = repoman

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
datefmt = %H:%M:%S
